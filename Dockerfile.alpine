FROM twdps/circleci-base-image:alpine-stable

LABEL org.opencontainers.image.created="%%CREATED%%" \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.documentation="https://github.com/twplatformlabs/circleci-infra-aws" \
      org.opencontainers.image.source="https://github.com/twplatformlabs/circleci-infra-aws" \
      org.opencontainers.image.url="https://github.com/twplatformlabs/circleci-infra-aws" \
      org.opencontainers.image.version="%%VERSION%%" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.title="circleci-infra-aws" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image for terraform pipelines" \
      org.opencontainers.image.base.name="%%BASE%%"

ENV TERRAFORM_VERSION=1.12.2
SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# Configured for automatic, monthly build using current package repository release versions.
# Pin downstream executor builds to specific OS and package versions using YYYY.MM tag.
# hadolint ignore=DL3004
RUN sudo apk add --no-cache \
             nodejs-current \
             npm \
             ncurses-terminfo-base \
             python3 \
             python3-dev \
             py3-pip \
             perl-utils \
             libffi-dev && \
    sudo rm /usr/lib/python*/EXTERNALLY-MANAGED && \
    if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \
    sudo ln -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo pip install --no-binary \
             invoke \
             requests \
             jinja2 \
             checkov && \
    sudo npm install -g \
             snyk \
             bats && \
    curl -SLO "https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-linux-x86_64.tar.gz" && \
    sudo tar -xvzf "google-cloud-cli-linux-x86_64.tar.gz" -C /usr/local && \
    rm "google-cloud-cli-linux-x86_64.tar.gz" && \
    sudo chmod +x /usr/local/google-cloud-sdk/install.sh && \
    sudo chown -R "$(whoami)" /usr/local/google-cloud-sdk && \
    sudo bash -c "/usr/local/google-cloud-sdk/install.sh -q" && \
    sudo gcloud components install gke-gcloud-auth-plugin && \
    curl -SLO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && \
    sudo unzip -j "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" terraform -d /usr/local/bin && \
    sudo rm "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && \
    sudo bash -c "curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash" && \
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin && \
    sudo bash -c "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && \
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && rm kubectl && \
    sudo apk add --no-cache openssl && \
    sudo bash -c "curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash" && \
    download_url=$(curl -s "https://api.github.com/repos/twplatformlabs/circlepipe/releases/latest" | jq -r ".assets[] | select(.name == \"circlepipe_Linux_amd64.tar.gz\") | .browser_download_url") && \
    curl -LO "${download_url}" && \
    mkdir ./circlepipe && tar -xzf circlepipe_Linux_amd64.tar.gz -C ./circlepipe && \
    sudo mv ./circlepipe/circlepipe /usr/local/bin/circlepipe && \
    sudo rm -rf ./circlepipe circlepipe_Linux_amd64.tar.gz && \
    download_url=$(curl -s "https://api.github.com/repos/sigstore/cosign/releases/latest" | jq -r ".assets[] | select(.name == \"cosign-linux-amd64\") | .browser_download_url") && \
    curl -LO "${download_url}" && \
    chmod +x cosign-linux-amd64 && sudo mv cosign-linux-amd64 /usr/local/bin/cosign

ENV PATH="/usr/local/google-cloud-sdk/bin:$PATH"

USER circleci

WORKDIR /home/circleci/project
